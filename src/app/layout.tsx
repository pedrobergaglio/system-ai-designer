import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { PlaygroundStateProvider } from '../hooks/use-playground-state';
import { ConnectionProvider } from '../hooks/use-connection';
import { PHProvider } from '../hooks/posthog-provider';
import { TooltipProvider } from "@/components/ui/tooltip";
import { Toaster } from 'react-hot-toast';
import dynamic from "next/dynamic";

/* const PostHogPageView = dynamic(
  () => import("../components/posthog-pageview"),
  {
    ssr: false,
  }
); */

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return(

    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {/* <PHProvider> */}
      <PlaygroundStateProvider>
        <ConnectionProvider>
        <Toaster />
          {/* <TooltipProvider> */}
            {/* <PostHogPageView /> */}
            {children}
            {/* <Toaster /> */}
          {/* </TooltipProvider> */}
        </ConnectionProvider>
      </PlaygroundStateProvider>
    {/* </PHProvider> */}
      </body>
    </html>
  

);
  /* return (
    
  ); */
}
